spring.webflux.problemdetails.enabled=true

spring.config.import=optional:configserver:http://localhost:8888/

management.tracing.sampling.probability=1.0

#313
spring.cloud.discovery.enabled=false
spring.threads.virtual.enabled=true


resilience4j.bulkhead.instances.default.max-concurrent-calls=20
resilience4j.bulkhead.instances.default.max-wait-duration=10ms
resilience4j.bulkhead.instances.product-api.max-concurrent-calls=10
resilience4j.ratelimiter.instances.default.limit-for-period=10
resilience4j.ratelimiter.instances.default.limit-refresh-period=10s
resilience4j.ratelimiter.instances.default.timeout-duration=3s
resilience4j.ratelimiter.instances.default.register-health-indicator=true
#resilience4j.retry.retryAspectOrder=2
resilience4j.retry.instances.product-api.enable-exponential-backoff=true
resilience4j.retry.instances.product-api.exponential-backoff-multiplier=2
resilience4j.retry.instances.product-api.max-attempts=3
resilience4j.retry.instances.product-api.wait-duration=1s
#resilience4j.circuitbreaker.circuitBreakerAspectOrder=1
resilience4j.circuitbreaker.instances.default.register-health-indicator=true
resilience4j.circuitbreaker.instances.default.sliding-window-size=5
resilience4j.circuitbreaker.instances.default.minimum-number-of-calls=2
resilience4j.circuitbreaker.instances.default.failure-rate-threshold=100
resilience4j.circuitbreaker.instances.default.permitted-number-of-calls-in-half-open-state=2
resilience4j.circuitbreaker.instances.default.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.get-inventory-by-product-codes.register-health-indicator=true
resilience4j.circuitbreaker.instances.get-inventory-by-product-codes.sliding-window-size=10
resilience4j.circuitbreaker.instances.get-inventory-by-product-codes.permitted-number-of-calls-in-half-open-state=2
resilience4j.circuitbreaker.instances.get-inventory-by-product-codes.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.timelimiter.instances.default.timeout-duration=10s
resilience4j.timelimiter.instances.default.cancel-running-future=true


## adding kafka consumer to test sending and receiving of message
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.LongDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.example.common.dtos
