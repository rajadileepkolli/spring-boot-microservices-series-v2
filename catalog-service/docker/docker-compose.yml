version: '3.8'
services:

  postgresqldb:
    image: postgres:15-alpine
    extra_hosts: ['host.docker.internal:host-gateway']
    environment:
      - POSTGRES_USER=appuser
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=appdb
    ports:
      - "5432:5432"
    networks:
      - catalog-network

  zipkin-server:
    image: openzipkin/zipkin
    extra_hosts: ['host.docker.internal:host-gateway']
    container_name: zipkin-server
    deploy:
      resources:
        limits:
          memory: 512m
    expose:
      - "9411"
    ports:
      - "9411:9411"
    networks:
      - catalog-network

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.3.1
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    healthcheck:
      test: [ "CMD-SHELL", "echo ruok | nc localhost 2181" ]
      interval: 30s
      timeout: 5s
      retries: 3
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    networks:
      - catalog-network

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.3.1
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9999:9999"
    healthcheck:
      test: [ "CMD-SHELL", "nc -z localhost 9092" ]
      interval: 30s
      timeout: 5s
      retries: 3
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    networks:
      - catalog-network

  config-server:
    container_name: config-server
    extra_hosts: ['host.docker.internal:host-gateway']
    image: dockertmt/mmv2-config-server-17:0.0.1-SNAPSHOT
    deploy:
      resources:
        limits:
          memory: 700m
    ports:
      - "8888:8888"
    networks:
      - catalog-network
    environment:
      SPRING_PROFILES_ACTIVE: native

  naming-server:
    container_name: naming-server
    extra_hosts: ['host.docker.internal:host-gateway']
    image: dockertmt/mmv2-service-registry-17:0.0.1-SNAPSHOT
    deploy:
      resources:
        limits:
          memory: 700m
    ports:
      - "8761:8761"
    networks:
      - catalog-network
    depends_on:
      - config-server
    environment:
      - SPRING.ZIPKIN.BASEURL= http://zipkin-server:9411/
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888/
    restart: unless-stopped

networks:
  catalog-network:
