version: "3.8"

services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.11.3-management-alpine
    expose:
      - "5672"
      - "15672"
    ports:
      - "5672:5672"
      - "15672:15672"
    deploy:
      resources:
        limits:
          memory: 350m
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - microservice-network

  zipkin-server:
    image: openzipkin/zipkin
    container_name: zipkin-server
    deploy:
      resources:
        limits:
          memory: 512m
    expose:
      - "9411"
    ports:
      - "9411:9411"
#    environment:
#      RABBIT_URI: amqp://guest:guest@rabbitmq:5672
#    depends_on:
#      rabbitmq:
#        condition: service_healthy
    networks:
      - microservice-network

  postgresql:
    container_name: postgresql
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=appuser
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=appdb
    ports:
      - "5432:5432"
    networks:
      - microservice-network

  pgadmin4:
    container_name: pgadmin4
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=pgadmin4@pgadmin.org
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - postgresql
    networks:
      - microservice-network

  mongodb:
    container_name: mongodb
    image: mongo:6.0.3
    volumes:
      - mongo-data:/data/db/mongo
    ports:
      - "27017:27017"
    networks:
      - microservice-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
  
  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  naming-server:
    container_name: naming-server
    image: dockertmt/mmv2-service-registry-17:0.0.1-SNAPSHOT
    deploy:
      resources:
        limits:
          memory: 700m
    ports:
      - "8761:8761"
    networks:
      - microservice-network
    depends_on:
      - config-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka
      SPRING_CONFIG_IMPORT: configserver:http://config-server:8888/

  config-server:
    container_name: config-server
    image: dockertmt/mmv2-config-server-17:0.0.1-SNAPSHOT
    deploy:
      resources:
        limits:
          memory: 700m
    ports:
      - "8888:8888"
    networks:
      - microservice-network
    environment:
      SPRING_PROFILES_ACTIVE: native

  api-gateway:
    container_name: api-gateway
    image: dockertmt/mmv2-api-gateway:0.0.1-SNAPSHOT
    deploy:
      resources:
        limits:
          memory: 700m
    ports:
      - "8765:8765"
    networks:
      - microservice-network
    depends_on:
      - config-server
      - naming-server
      - rabbitmq
      - zipkin-server
      - mongodb
    environment:
      SPRING_PROFILES_ACTIVE: docker
      RABBIT_URI: amqp://guest:guest@rabbitmq:5672
      SPRING_DATA_MONGODB_HOST: mongodb
      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka

  catalog-service:
    container_name: catalog-service
    image: dockertmt/mmv2-catalog-service:0.0.1-SNAPSHOT
    deploy:
      resources:
        limits:
          memory: 700m
    ports:
      - "18080:18080"
    networks:
      - microservice-network
    depends_on:
      - naming-server
      - rabbitmq
      - zipkin-server
      - postgresql
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING.ZIPKIN.BASEURL: http://zipkin-server:9411/
      RABBIT_URI: amqp://guest:guest@rabbitmq:5672
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_ZIPKIN_SENDER_TYPE: rabbit
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      SPRING_DATASOURCE_URL=jdbc: postgresql://postgresql:5432/appdb
      SPRING_DATASOURCE_USERNAME: siva
      SPRING_DATASOURCE_PASSWORD: secret
      SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:8888/
      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka

  inventory-service:
    container_name: inventory-service
    image: dockertmt/mmv2-inventory-service:0.0.1-SNAPSHOT
    deploy:
      resources:
        limits:
          memory: 700m
    ports:
      - "18181:18181"
    networks:
      - microservice-network
    depends_on:
      - naming-server
      - rabbitmq
      - zipkin-server
      - postgresql
    environment:
      SPRING.ZIPKIN.BASEURL: http://zipkin-server:9411/
      RABBIT_URI: amqp://guest:guest@rabbitmq:5672
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_ZIPKIN_SENDER_TYPE: rabbit
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:8888/
      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka

  order-service:
    container_name: order-service
    image: dockertmt/mmv2-order-service:0.0.1-SNAPSHOT
    deploy:
      resources:
        limits:
          memory: 700m
    ports:
      - "18282:18282"
    networks:
      - microservice-network
    depends_on:
      - naming-server
      - rabbitmq
      - zipkin-server
      - postgresql
      - kafka
    environment:
      - SPRING_PROFILES_ACTIVE= docker
      - SPRING.ZIPKIN.BASEURL= http://zipkin-server:9411/
      - RABBIT_URI= amqp://guest:guest@rabbitmq:5672
      - SPRING_RABBITMQ_HOST= rabbitmq
      - SPRING_ZIPKIN_SENDER_TYPE= rabbit
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresql:5432/appdb
      - SPRING_DATASOURCE_USERNAME=siva
      - SPRING_DATASOURCE_PASSWORD=secret
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888/
      - EUREKA.CLIENT.SERVICEURL.DEFAULTZONE:http://naming-server:8761/eureka

networks:
  microservice-network:

volumes:
  mongo-data:
